/* Copyright 2025 Tencent Inc.  All rights reserved.

==============================================================================*/
#pragma once

#include <atomic>
#include <functional>
#include <vector>

namespace ksana_llm {

struct DraftTokens {
  // draft token generated by MTP and Trie
  std::vector<int> mtp;
  std::vector<int> trie;

  std::vector<int> GetDraftTokens() const {
    std::vector<int> draft_tokens;
    draft_tokens.reserve(mtp.size() + trie.size());
    draft_tokens.insert(draft_tokens.end(), mtp.begin(), mtp.end());
    draft_tokens.insert(draft_tokens.end(), trie.begin(), trie.end());
    return draft_tokens;
  }

  void clear() {
    mtp.clear();
    trie.clear();
  }

  size_t size() const { return mtp.size() + trie.size(); }
};
}  // namespace ksana_llm
